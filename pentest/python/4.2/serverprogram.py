#used rot13 encryption
import socket
import threading

def rot13(text):
    result = []
    for char in text:
        if 'a' <= char <= 'z':
            result.append(chr((ord(char) - ord('a') + 13) % 26 + ord('a')))
        elif 'A' <= char <= 'Z':
            result.append(chr((ord(char) - ord('A') + 13) % 26 + ord('A')))
        else:
            result.append(char)
    return ''.join(result)

def handle_client(client_socket, clients):
    while True:
        try:
            message = client_socket.recv(1024).decode('utf-8')
            if message:
                decrypted_message = rot13(message)
                print(f"Received (decrypted): {decrypted_message}")
                broadcast(message, clients)
            else:
                remove(client_socket, clients)
        except:
            continue

def broadcast(message, clients):
    for client in clients:
        try:
            client.send(message.encode('utf-8'))
        except:
            remove(client, clients)

def remove(client_socket, clients):
    if client_socket in clients:
        clients.remove(client_socket)

def main():
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind(('0.0.0.0', 5555))
    server.listen(5)
    clients = []

    print("Server started and waiting for connections...")

    while True:
        client_socket, addr = server.accept()
        print(f"Connection established with {addr}")
        clients.append(client_socket)

        threading.Thread(target=handle_client, args=(client_socket, clients)).start()

if __name__ == "__main__":
    main()